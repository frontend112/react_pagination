{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","firstItem","lastItem","recentItems","items","slice","paginationNumber","Math","ceil","pageList","isPrevEnabled","isNextEnabled","className","cn","disabled","href","onClick","id","map","page","active","item","App","useState","setCurrentPage","setPerPage","length","onChange","event","target","value","htmlFor","prevPage","ReactDOM","render","document","getElementById"],"mappings":"sOAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCQIG,EAAwB,SAAC,GAQ/B,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SAGMC,EADF,EADJC,MAE0BC,MAAMJ,EAAY,EAAGC,GAEzCI,EAAmBC,KAAKC,KAAKX,EAAQC,GAErCW,EAAWnB,EAAW,EAAGgB,GAEzBI,EAAgBX,EAAc,EAC9BY,EAAgBZ,EAAcO,EAEpC,OACE,qCACE,qBAAIM,UAAU,aAAd,UACE,oBAEEA,UAAWC,IACT,YACA,CACEC,UACCJ,IANP,SAUE,mBACEK,KAAK,QACLH,UAAU,YACV,UAAQ,WACR,gBACEF,EACI,QACA,OAENM,QAAS,kBAAMN,GAAiBV,EAAa,SAC7CiB,GAAG,OAVL,mBATI,QAyBJR,EAASS,KAAI,SAAAC,GAAI,OACf,oBAEEP,UAAWC,IACT,YACA,CAAEO,OAAQD,IAASpB,IAJvB,SAOE,mBACE,UAAQ,WACRa,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMhB,EAAamB,IAJ9B,SAMGA,KAZEA,MAiBX,oBAEEP,UAAWC,IACT,YACA,CACEC,UACCH,IANP,SAUE,mBACEI,KAAK,QACLH,UAAU,YACV,UAAQ,WACR,gBACED,EACI,QACA,OAENK,QAAS,kBAAML,GAAiBX,EAAa,SAT/C,mBATI,WAwBR,6BAEIG,EAAYe,KAAI,SAAAG,GAAI,OAClB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCvGfjB,EAAQd,EAAW,EAAG,IACzB4B,KAAI,SAAAxB,GAAC,qBAAYA,MAEP4B,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoByB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB2B,EAAhB,KAOM5B,EAAQO,EAAMsB,OAEdzB,GAAaF,EAAc,GAAKD,EAAU,EAE1CI,EAAWD,EAAYH,EAAUD,EACnCA,EACAI,EAAYH,EAAU,EAgB1B,OACE,sBAAKc,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiCE,EADjC,cACgDC,EADhD,eAC+DL,EAD/D,OAIA,sBAAKe,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEA,UAAU,eACV,UAAQ,kBACRK,GAAG,kBACHU,SAzCkB,SAACC,GAC3BH,GAAYG,EAAMC,OAAOC,OACzBN,EAAe,IAwCPM,MAAOhC,EALT,UAOE,wBAAQgC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGJ,uBAAOC,QAAQ,kBAAkBnB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA9CmB,SAACmB,GACJ,kBAATA,GACTK,EAAeL,GAGJ,SAATA,GACFK,GAAe,SAAAQ,GAAQ,OAAIA,EAAW,KAG3B,SAATb,GACFK,GAAe,SAAAQ,GAAQ,OAAIA,EAAW,MAqCpC/B,UAAWA,EACXC,SAAUA,EACVE,MAAOA,QCxEf6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7dba868c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport './Pagination.scss';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  firstItem: number;\n  lastItem: number;\n  items: string[];\n  onPageChange: (page: number | string) => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  firstItem,\n  lastItem,\n  items,\n}) => {\n  const recentItems = items.slice(firstItem - 1, lastItem);\n\n  const paginationNumber = Math.ceil(total / perPage);\n\n  const pageList = getNumbers(1, paginationNumber);\n\n  const isPrevEnabled = currentPage > 1;\n  const isNextEnabled = currentPage < paginationNumber;\n\n  return (\n    <>\n      <ul className=\"Pagination\">\n        <li\n          key=\"prev\"\n          className={cn(\n            'page-item',\n            {\n              disabled:\n              !isPrevEnabled,\n            },\n          )}\n        >\n          <a\n            href=\"#prev\"\n            className=\"page-link\"\n            data-cy=\"prevLink\"\n            aria-disabled={\n              isPrevEnabled\n                ? 'false'\n                : 'true'\n            }\n            onClick={() => isPrevEnabled && onPageChange('prev')}\n            id=\"prev\"\n          >\n            «\n          </a>\n        </li>\n        {\n          pageList.map(page => (\n            <li\n              key={page}\n              className={cn(\n                'page-item',\n                { active: page === currentPage },\n              )}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => onPageChange(page)}\n              >\n                {page}\n              </a>\n            </li>\n          ))\n        }\n        <li\n          key=\"next\"\n          className={cn(\n            'page-item',\n            {\n              disabled:\n              !isNextEnabled,\n            },\n          )}\n        >\n          <a\n            href=\"#next\"\n            className=\"page-link\"\n            data-cy=\"nextLink\"\n            aria-disabled={\n              isNextEnabled\n                ? 'false'\n                : 'true'\n            }\n            onClick={() => isNextEnabled && onPageChange('next')}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {\n          recentItems.map(item => (\n            <li key={item} data-cy=\"item\">{item}</li>\n          ))\n        }\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePerPageChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const total = items.length;\n\n  const firstItem = (currentPage - 1) * perPage + 1;\n\n  const lastItem = firstItem + perPage > total\n    ? total\n    : firstItem + perPage - 1;\n\n  const handlePageChange = (page: number | string) => {\n    if (typeof page === 'number') {\n      setCurrentPage(page);\n    }\n\n    if (page === 'prev') {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n\n    if (page === 'next') {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            className=\"form-control\"\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            onChange={handlePerPageChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n        firstItem={firstItem}\n        lastItem={lastItem}\n        items={items}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}